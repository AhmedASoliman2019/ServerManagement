@page "/servers"
@inject NavigationManager NavMan
<div>
    <h1>Select city</h1>
    <div class="container-fluid text-center">
        <div class="row w-50">
            @foreach (string c in cities)
            {
                <div class="col">
                    <div class="card">
                        <img src="@($"/images/{c}.png")" class="card-img-top">
                        <div class="card-body">
                            <button type="button" class="btn btn-primary">@c</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<br />
<br />
<h3>Servers listing</h3>
<br />
<br />
@foreach (Server s in AllServers)
{
    @*<div class="row">
            <div class="col">Server ID:</div>
            <div class="col"><strong>@s.Id</strong></div>
            <div class="row">
                <div class="col">Server Name:</div>
                <div class="col"><strong>@s.Name</strong></div>
            </div>
            <div class="row">
                <div class="col">Server City:</div>
                <div class="col"><strong>@s.City</strong></div>
            </div>
            <div class="row">
                <div class="col">Server status</div>
                <div class="col"><strong style="color: @(s.IsOnline ? "green" : "red")">@(s.IsOnline ? "Online" : "Offline")</strong></div>
            </div>
        </div>*@
<EditForm Model="s" FormName="@($"DeleteServer-{s.Id}")" OnValidSubmit="@(() => DeleteServer(s.Id))">
    <div class="row border-bottom">
        <div class="col"><p>Server @s.Name located in @s.City is currently</p></div>
        <div class="col"> <p style="font-weight: bolder; color: @(s.IsOnline? "green":"red")">@(s.IsOnline? "Online":"Offline")</p></div>
        <div class="col"><a href="/EditServer/@s.Id">Edit Server</a></div>
        <div class="col"><button class="link-primary" onclick="@(()=> DeleteServer(s.Id))">Delete</button></div>
    </div>
</EditForm>


}
<a href="/AddServer">Add New</a>
@code{
    private List<Server> CityServers = ServersRepository.GetServersByCity("Toronto");
    private List<Server> AllServers = ServersRepository.GetServres();
    private List<string> cities = CitiesRepository.GetCities();
    void DeleteServer(int ServerId)
    {
        ServersRepository.DeleteServer(ServerId);
        NavMan.Refresh();
    }
}
